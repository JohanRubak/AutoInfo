<Application x:Class="Journalfoeringssystem.App"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:fa="http://schemas.awesome.incremented/wpf/xaml/fontawesome.sharp"
             xmlns:viewModel="clr-namespace:Journalfoeringssystem.MVVM.ViewModel"
             xmlns:view="clr-namespace:Journalfoeringssystem.MVVM.View"
             StartupUri="MainWindow.xaml">
   <Application.Resources>
      <ResourceDictionary>
         <ResourceDictionary.MergedDictionaries>
            <ResourceDictionary Source="Theme/Styles.xaml"/>
         </ResourceDictionary.MergedDictionaries>

         <!--Forskellige views-->
         <DataTemplate DataType="{x:Type viewModel:HomeViewModel}">
            <view:HomeView />
         </DataTemplate>

         <DataTemplate DataType="{x:Type viewModel:GenerateKraniofacialViewModel}">
            <view:GenerateKraniofacialView/>
         </DataTemplate>

         <DataTemplate DataType="{x:Type viewModel:GenerateMandibelViewModel}">
            <view:GenerateMandibelView/>
         </DataTemplate>

         <DataTemplate DataType="{x:Type viewModel:GenerateGenericViewModel}">
            <view:GenerateGenericView />
         </DataTemplate>

         <DataTemplate DataType="{x:Type viewModel:GenerateSterilnoteViewModel}">
            <view:GenerateSterilnoteView />
         </DataTemplate>

         <DataTemplate DataType="{x:Type viewModel:HelpViewModel}">
            <view:HelpView />
         </DataTemplate>


         <SolidColorBrush x:Key="ProgressBar.Progress" Color="#FF06B025"/>
         <SolidColorBrush x:Key="ProgressBar.Background" Color="#FFE6E6E6"/>
         <SolidColorBrush x:Key="ProgressBar.Border" Color="#FFBCBCBC"/>
         <Style TargetType="{x:Type ProgressBar}">
            <Setter Property="Foreground" Value="{StaticResource ProgressBar.Progress}"/>
            <Setter Property="Background" Value="{StaticResource ProgressBar.Background}"/>
            <Setter Property="BorderBrush" Value="{StaticResource ProgressBar.Background}"/>
            <Setter Property="BorderThickness" Value="1"/>
            <Setter Property="Template">
               <Setter.Value>
                  <ControlTemplate TargetType="{x:Type ProgressBar}">
                     <Grid x:Name="TemplateRoot">
                        <VisualStateManager.VisualStateGroups>
                           <VisualStateGroup x:Name="CommonStates">
                              <VisualState x:Name="Determinate"/>
                              <VisualState x:Name="Indeterminate">
                                 <Storyboard RepeatBehavior="Forever">
                                    <DoubleAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransform).(TransformGroup.Children)[0].(ScaleTransform.ScaleX)">
                                       <EasingDoubleKeyFrame KeyTime="0" Value="0.25"/>
                                       <EasingDoubleKeyFrame KeyTime="0:0:1" Value="0.25"/>
                                       <EasingDoubleKeyFrame KeyTime="0:0:2" Value="0.25"/>
                                    </DoubleAnimationUsingKeyFrames>
                                    <PointAnimationUsingKeyFrames Storyboard.TargetName="Animation" Storyboard.TargetProperty="(UIElement.RenderTransformOrigin)">
                                       <EasingPointKeyFrame KeyTime="0" Value="-0.5,0.5"/>
                                       <EasingPointKeyFrame KeyTime="0:0:1" Value="0.5,0.5"/>
                                       <EasingPointKeyFrame KeyTime="0:0:2" Value="1.5,0.5"/>
                                    </PointAnimationUsingKeyFrames>
                                 </Storyboard>
                              </VisualState>
                           </VisualStateGroup>
                        </VisualStateManager.VisualStateGroups>
                        <Border Background="{TemplateBinding Background}" CornerRadius="3" BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="{TemplateBinding BorderBrush}"/>
                        <Rectangle x:Name="PART_Track"/>
                        <Grid x:Name="PART_Indicator" ClipToBounds="true" HorizontalAlignment="Left">
                           <Rectangle x:Name="Indicator" Fill="{TemplateBinding Foreground}" RadiusX="3" RadiusY="3"/>
                           <Rectangle x:Name="Animation" Fill="{TemplateBinding Foreground}" RenderTransformOrigin="0.5,0.5" RadiusX="3" RadiusY="3">
                              <Rectangle.RenderTransform>
                                 <TransformGroup>
                                    <ScaleTransform/>
                                    <SkewTransform/>
                                    <RotateTransform/>
                                    <TranslateTransform/>
                                 </TransformGroup>
                              </Rectangle.RenderTransform>
                           </Rectangle>
                        </Grid>
                     </Grid>
                     <ControlTemplate.Triggers>
                        <Trigger Property="Orientation" Value="Vertical">
                           <Setter Property="LayoutTransform" TargetName="TemplateRoot">
                              <Setter.Value>
                                 <RotateTransform Angle="-90"/>
                              </Setter.Value>
                           </Setter>
                        </Trigger>
                        <Trigger Property="IsIndeterminate" Value="true">
                           <Setter Property="Visibility" TargetName="Indicator" Value="Collapsed"/>
                        </Trigger>
                     </ControlTemplate.Triggers>
                  </ControlTemplate>
               </Setter.Value>
            </Setter>

            <Style.Triggers>
               <EventTrigger RoutedEvent="FrameworkElement.Loaded">
                  <BeginStoryboard>
                     <Storyboard DecelerationRatio="1">
                        <DoubleAnimation Storyboard.TargetProperty="Value"
                                         From="0"/>
                     </Storyboard>
                  </BeginStoryboard>
               </EventTrigger>
            </Style.Triggers>
         </Style>


      </ResourceDictionary>

    </Application.Resources>
</Application>
